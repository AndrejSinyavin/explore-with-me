CREATE TABLE IF NOT EXISTS users
(
    id        BIGINT GENERATED BY DEFAULT AS IDENTITY,
    email     VARCHAR(254) NOT NULL,
    name      VARCHAR(250) NOT NULL,
    CONSTRAINT pk_users PRIMARY KEY (id),
    CONSTRAINT uc_users_email UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS categories
(
    id        BIGINT GENERATED BY DEFAULT AS IDENTITY,
    name      VARCHAR(50) NOT NULL,
    CONSTRAINT pk_categories PRIMARY KEY (id),
    CONSTRAINT uc_categories_name UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS locations
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY,
    lat         FLOAT NOT NULL,
    lon         FLOAT NOT NULL,
    CONSTRAINT pk_locations PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS events
(
    id                  BIGINT GENERATED BY DEFAULT AS IDENTITY,
    annotation          VARCHAR(2000) NOT NULL,
    category            BIGINT NOT NULL,
    confirmed_requests  BIGINT,
    created_on          TIMESTAMP WITHOUT TIME ZONE,
    description         VARCHAR(7000),
    event_date          TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    initiator           BIGINT NOT NULL,
    location            BIGINT NOT NULL,
    paid                BOOLEAN NOT NULL,
    participant_limit   INTEGER,
    published_on        TIMESTAMP WITHOUT TIME ZONE,
    request_moderation  BOOLEAN,
    state               VARCHAR(16),
    title               VARCHAR(120) NOT NULL,
    views               BIGINT,
    CONSTRAINT pk_events PRIMARY KEY (id),
    CONSTRAINT fk_events_on_category FOREIGN KEY (category) REFERENCES categories (id) ON DELETE RESTRICT,
    CONSTRAINT fk_events_on_initiator FOREIGN KEY (initiator) REFERENCES users (id) ON DELETE CASCADE,
    CONSTRAINT fk_events_on_location FOREIGN KEY (location) REFERENCES locations (id) ON DELETE RESTRICT,
    CONSTRAINT ch_events_on_state CHECK ( state IN ('PENDING', 'PUBLISHED', 'CANCELED'))
);